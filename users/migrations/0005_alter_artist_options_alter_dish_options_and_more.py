# Generated by Django 5.2 on 2025-09-19 07:03

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0004_dish_dishcategory_drink_drinkcategory_ingredient_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='artist',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='dish',
            options={'ordering': ['name'], 'verbose_name_plural': 'Dishes'},
        ),
        migrations.AlterModelOptions(
            name='dishcategory',
            options={'ordering': ['name'], 'verbose_name_plural': 'Dish categories'},
        ),
        migrations.AlterModelOptions(
            name='drink',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='drinkcategory',
            options={'ordering': ['name'], 'verbose_name_plural': 'Drink categories'},
        ),
        migrations.AlterModelOptions(
            name='ingredient',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='interest',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='musicgenre',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='venue',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='dish',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='drink',
            name='alcohol_content',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='drink',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 9, 19, 7, 2, 26, 879705, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='profile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='venue',
            name='address',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='venue',
            name='average_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='venue',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 9, 19, 7, 3, 9, 525263, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='venue',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='venue',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='venue',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='venue',
            name='venue_type',
            field=models.CharField(choices=[('restaurant', 'Restaurant'), ('bar', 'Bar'), ('cafe', 'Cafe'), ('club', 'Club'), ('pub', 'Pub'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AlterField(
            model_name='dish',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dishes', to='users.dishcategory'),
        ),
        migrations.AlterField(
            model_name='dish',
            name='ingredients',
            field=models.ManyToManyField(related_name='dishes', to='users.ingredient'),
        ),
        migrations.AlterField(
            model_name='dishcategory',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='drink',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drinks', to='users.drinkcategory'),
        ),
        migrations.AlterField(
            model_name='drinkcategory',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='interest',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='age',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(13), django.core.validators.MaxValueValidator(120)]),
        ),
        migrations.AlterField(
            model_name='profile',
            name='artists',
            field=models.ManyToManyField(blank=True, related_name='profiles', to='users.artist'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='bio',
            field=models.TextField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='favorite_dishes',
            field=models.ManyToManyField(blank=True, related_name='favorited_by_profiles', to='users.dish'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='favorite_drinks',
            field=models.ManyToManyField(blank=True, related_name='favorited_by_profiles', to='users.drink'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='genres',
            field=models.ManyToManyField(blank=True, related_name='profiles', to='users.musicgenre'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='interests',
            field=models.ManyToManyField(blank=True, related_name='profiles', to='users.interest'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='preferred_dish_categories',
            field=models.ManyToManyField(blank=True, related_name='preferred_by_profiles', to='users.dishcategory'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='preferred_drink_categories',
            field=models.ManyToManyField(blank=True, related_name='preferred_by_profiles', to='users.drinkcategory'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='profile',
            name='visibility',
            field=models.CharField(choices=[('public', 'Public'), ('friends', 'Friends'), ('interests', 'Interests'), ('closed', 'Closed')], db_index=True, default='public', max_length=20),
        ),
        migrations.AlterField(
            model_name='venue',
            name='dishes',
            field=models.ManyToManyField(blank=True, related_name='venues', to='users.dish'),
        ),
        migrations.AlterField(
            model_name='venue',
            name='drinks',
            field=models.ManyToManyField(blank=True, related_name='venues', to='users.drink'),
        ),
        migrations.AlterField(
            model_name='venue',
            name='music_genres',
            field=models.ManyToManyField(blank=True, related_name='venues', to='users.musicgenre'),
        ),
        migrations.AlterField(
            model_name='venue',
            name='name',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterUniqueTogether(
            name='dish',
            unique_together={('name', 'category')},
        ),
        migrations.AlterUniqueTogether(
            name='drink',
            unique_together={('name', 'category')},
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['visibility'], name='users_profi_visibil_054706_idx'),
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['age'], name='users_profi_age_72c915_idx'),
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['streaming_service'], name='users_profi_streami_405de5_idx'),
        ),
        migrations.AddIndex(
            model_name='venue',
            index=models.Index(fields=['venue_type'], name='users_venue_venue_t_7cc74d_idx'),
        ),
        migrations.AddIndex(
            model_name='venue',
            index=models.Index(fields=['is_active'], name='users_venue_is_acti_d304a9_idx'),
        ),
    ]
